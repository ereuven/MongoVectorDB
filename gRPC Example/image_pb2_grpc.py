# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import image_pb2 as image__pb2


class ImageServiceStub(object):
  """my service is called PingPongService
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.save = channel.unary_unary(
        '/ImageService/save',
        request_serializer=image__pb2.StreamBytes.SerializeToString,
        response_deserializer=image__pb2.EmptyResponse.FromString,
        )


class ImageServiceServicer(object):
  """my service is called PingPongService
  """

  def save(self, request, context):
    """an example of getting a feature
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ImageServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'save': grpc.unary_unary_rpc_method_handler(
          servicer.save,
          request_deserializer=image__pb2.StreamBytes.FromString,
          response_serializer=image__pb2.EmptyResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ImageService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
